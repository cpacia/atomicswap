// Code generated by protoc-gen-go. DO NOT EDIT.
// source: atomicswaps.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	atomicswaps.proto
	message.proto

It has these top-level messages:
	SignedLimitOrder
	LimitOrder
	SignedRemoveOrder
	Message
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SignedLimitOrder struct {
	SerializedLimitOrder []byte `protobuf:"bytes,1,opt,name=serializedLimitOrder,proto3" json:"serializedLimitOrder,omitempty"`
	Signature            []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *SignedLimitOrder) Reset()                    { *m = SignedLimitOrder{} }
func (m *SignedLimitOrder) String() string            { return proto.CompactTextString(m) }
func (*SignedLimitOrder) ProtoMessage()               {}
func (*SignedLimitOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SignedLimitOrder) GetSerializedLimitOrder() []byte {
	if m != nil {
		return m.SerializedLimitOrder
	}
	return nil
}

func (m *SignedLimitOrder) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type LimitOrder struct {
	PeerID   string                     `protobuf:"bytes,1,opt,name=peerID" json:"peerID,omitempty"`
	BuyBTC   bool                       `protobuf:"varint,2,opt,name=buyBTC" json:"buyBTC,omitempty"`
	Quantity uint64                     `protobuf:"varint,3,opt,name=quantity" json:"quantity,omitempty"`
	Price    uint64                     `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
	Utxo     *LimitOrder_SignedUTXO     `protobuf:"bytes,5,opt,name=utxo" json:"utxo,omitempty"`
	Expiry   *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=expiry" json:"expiry,omitempty"`
}

func (m *LimitOrder) Reset()                    { *m = LimitOrder{} }
func (m *LimitOrder) String() string            { return proto.CompactTextString(m) }
func (*LimitOrder) ProtoMessage()               {}
func (*LimitOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LimitOrder) GetPeerID() string {
	if m != nil {
		return m.PeerID
	}
	return ""
}

func (m *LimitOrder) GetBuyBTC() bool {
	if m != nil {
		return m.BuyBTC
	}
	return false
}

func (m *LimitOrder) GetQuantity() uint64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *LimitOrder) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *LimitOrder) GetUtxo() *LimitOrder_SignedUTXO {
	if m != nil {
		return m.Utxo
	}
	return nil
}

func (m *LimitOrder) GetExpiry() *google_protobuf.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

type LimitOrder_SignedUTXO struct {
	Outpoint  []byte `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *LimitOrder_SignedUTXO) Reset()                    { *m = LimitOrder_SignedUTXO{} }
func (m *LimitOrder_SignedUTXO) String() string            { return proto.CompactTextString(m) }
func (*LimitOrder_SignedUTXO) ProtoMessage()               {}
func (*LimitOrder_SignedUTXO) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *LimitOrder_SignedUTXO) GetOutpoint() []byte {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

func (m *LimitOrder_SignedUTXO) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type SignedRemoveOrder struct {
	OrderID   string `protobuf:"bytes,1,opt,name=orderID" json:"orderID,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *SignedRemoveOrder) Reset()                    { *m = SignedRemoveOrder{} }
func (m *SignedRemoveOrder) String() string            { return proto.CompactTextString(m) }
func (*SignedRemoveOrder) ProtoMessage()               {}
func (*SignedRemoveOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SignedRemoveOrder) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *SignedRemoveOrder) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*SignedLimitOrder)(nil), "SignedLimitOrder")
	proto.RegisterType((*LimitOrder)(nil), "LimitOrder")
	proto.RegisterType((*LimitOrder_SignedUTXO)(nil), "LimitOrder.SignedUTXO")
	proto.RegisterType((*SignedRemoveOrder)(nil), "SignedRemoveOrder")
}

func init() { proto.RegisterFile("atomicswaps.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0x49, 0xbf, 0x34, 0x5f, 0x3b, 0x7a, 0xb0, 0xa1, 0x94, 0x25, 0x08, 0x96, 0x9e, 0x8a,
	0x87, 0x14, 0xea, 0x3f, 0xa8, 0x22, 0x88, 0x42, 0x61, 0xad, 0x20, 0xde, 0x36, 0xed, 0x18, 0x06,
	0x9a, 0xec, 0xba, 0xd9, 0xd5, 0xd6, 0x1f, 0xe2, 0xef, 0x95, 0xee, 0xa6, 0x4d, 0x0f, 0xa2, 0xb7,
	0x3c, 0x33, 0x2f, 0x6f, 0x66, 0x1f, 0xe8, 0x09, 0x23, 0x0b, 0x5a, 0x56, 0x1f, 0x42, 0x55, 0xa9,
	0xd2, 0xd2, 0xc8, 0xe4, 0x22, 0x97, 0x32, 0x5f, 0xe3, 0xc4, 0x51, 0x66, 0x5f, 0x27, 0x86, 0x0a,
	0xac, 0x8c, 0x28, 0x94, 0x0f, 0x8c, 0x56, 0x70, 0xf6, 0x48, 0x79, 0x89, 0xab, 0x07, 0x2a, 0xc8,
	0xcc, 0xf5, 0x0a, 0x75, 0x3c, 0x85, 0x7e, 0x85, 0x9a, 0xc4, 0x9a, 0x3e, 0x8f, 0xe7, 0x2c, 0x18,
	0x06, 0xe3, 0x53, 0xfe, 0xe3, 0x2e, 0x3e, 0x87, 0x6e, 0x45, 0x79, 0x29, 0x8c, 0xd5, 0xc8, 0x5a,
	0x2e, 0xd8, 0x0c, 0x46, 0x5f, 0x2d, 0x80, 0xa3, 0xf0, 0x00, 0x22, 0x85, 0xa8, 0xef, 0x6e, 0x5c,
	0x65, 0x97, 0xd7, 0xb4, 0x9b, 0x67, 0x76, 0x3b, 0x5b, 0x5c, 0xbb, 0x86, 0x0e, 0xaf, 0x29, 0x4e,
	0xa0, 0xf3, 0x66, 0x45, 0x69, 0xc8, 0x6c, 0xd9, 0xbf, 0x61, 0x30, 0x0e, 0xf9, 0x81, 0xe3, 0x3e,
	0xb4, 0x95, 0xa6, 0x25, 0xb2, 0xd0, 0x2d, 0x3c, 0xc4, 0x97, 0x10, 0x5a, 0xb3, 0x91, 0xac, 0x3d,
	0x0c, 0xc6, 0x27, 0xd3, 0x41, 0xda, 0xfc, 0x3c, 0xf5, 0xcf, 0x7d, 0x5a, 0x3c, 0xcf, 0xb9, 0xcb,
	0xc4, 0x53, 0x88, 0x70, 0xa3, 0x48, 0x6f, 0x59, 0xe4, 0xd2, 0x49, 0xea, 0xa5, 0xa5, 0x7b, 0x69,
	0xe9, 0x62, 0x2f, 0x8d, 0xd7, 0xc9, 0xe4, 0x16, 0xa0, 0xe9, 0xd9, 0xdd, 0x27, 0xad, 0x51, 0x92,
	0x4a, 0x53, 0x4b, 0x3a, 0xf0, 0x1f, 0x62, 0xee, 0xa1, 0xe7, 0x7b, 0x38, 0x16, 0xf2, 0x1d, 0xbd,
	0x1e, 0x06, 0xff, 0xe5, 0xee, 0xe3, 0xe0, 0x67, 0x8f, 0xbf, 0x97, 0xcd, 0xc2, 0x97, 0x96, 0xca,
	0xb2, 0xc8, 0x9d, 0x7d, 0xf5, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x47, 0x2a, 0x08, 0x9c, 0x0e, 0x02,
	0x00, 0x00,
}
